"""deleted all tables

Revision ID: 3b9850ab2424
Revises: 3ee8273db0a2
Create Date: 2024-07-20 14:33:21.481352

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3b9850ab2424'
down_revision: Union[str, None] = '3ee8273db0a2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('assigned_tasks')
    op.drop_table('teacher_class_association_table')
    op.drop_table('marks')
    op.drop_table('assignments')
    op.drop_table('users')
    op.drop_table('groups')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assignments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('assignments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('due_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], name='assignments_teacher_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='assignments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='users_group_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('marks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('assignment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignments.id'], name='marks_assignment_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], name='marks_student_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='marks_pkey')
    )
    op.create_table('assigned_tasks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('assignment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('assigned_at', sa.DATE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignments.id'], name='assigned_tasks_assignment_id_fkey'),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='assigned_tasks_group_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], name='assigned_tasks_student_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='assigned_tasks_pkey')
    )
    op.create_table('teacher_class_association_table',
    sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='teacher_class_association_table_group_id_fkey'),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], name='teacher_class_association_table_teacher_id_fkey'),
    sa.PrimaryKeyConstraint('teacher_id', 'group_id', name='teacher_class_association_table_pkey')
    )
    op.create_table('groups',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('group_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('grade', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='groups_pkey')
    )
    # ### end Alembic commands ###
